#BlueJ class context
comment0.target=Tetris
comment0.text=\n\ This\ is\ the\ Tetris\ class.\n\ This\ class\ displays\ and\ plays\ the\ tetris\ game.\n\ It\ implements\ ArrowListener\ \n\ @author\ Carol\ Song\n\ @version\ February\ 22,\ 2022\n
comment1.params=
comment1.target=Tetris()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Tetris\n\ Creates\ a\ 20x10\ grid.\n\ Creates\ the\ playing\ field\ and\ begins\ the\ game.\n
comment10.params=
comment10.target=void\ clearCompletedRows()
comment10.text=\n\ Clears\ all\ the\ completed\ rows\ by\ iterating\ through\ them\n\ @postcondition\ all\ the\ completed\ rows\ have\ been\ cleared\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\n\ Main\ method\ for\ Tetris\ Class\n\ \n\ @param\ args\ the\ argument\ passed\ in\n
comment2.params=
comment2.target=void\ upPressed()
comment2.text=\n\ When\ the\ up\ arrow\ is\ pressed,\ rotates\ the\ tetrad\ if\ it\ can.\n
comment3.params=
comment3.target=void\ downPressed()
comment3.text=\n\ When\ the\ down\ arrow\ is\ pressed,\ shifts\ the\ tetrad\ one\ down.\n
comment4.params=
comment4.target=void\ leftPressed()
comment4.text=\n\ When\ the\ left\ arrow\ is\ pressed,\ shifts\ the\ tetrad\ one\ to\ the\ left.\n
comment5.params=
comment5.target=void\ rightPressed()
comment5.text=\n\ When\ the\ right\ arrow\ is\ pressed,\ shifts\ the\ tetrad\ one\ to\ the\ right.\n
comment6.params=
comment6.target=void\ spacePressed()
comment6.text=\n\ When\ space\ arrow\ is\ pressed,\ brings\ tetrad\ all\ the\ way\ to\ the\ bottom.\n
comment7.params=
comment7.target=void\ play()
comment7.text=\n\ Makes\ the\ active\ tetrad\ drop\ one\ space\ each\ second.\ \n\ After\ the\ tetrad\ reaches\ the\ bottoms,\ creates\ a\ new\ tetrad\ at\ the\ top\ \n\ and\ sets\ that\ new\ tetrad\ to\ the\ active\ tetrad.\n
comment8.params=row
comment8.target=boolean\ isCompletedRow(int)
comment8.text=\n\ Checks\ if\ each\ column\ of\ the\ inputted\ row\n\ is\ occupied\ by\ a\ block.\n\ @precondition\ 0\ <\=\ row\ <\ number\ of\ rows\n\ @postcondition\ returns\ true\ if\ every\ cell\ in\ the\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ given\ row\ is\ occupied;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ false\ otherwise.\n\ @param\ row\ int\ the\ row\ you\ want\ to\ test\ is\ cleared\n\ @return\ boolean\ true,\ if\ the\ row\ is\ completed;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ there\ is\ an\ empty\ space\ in\ the\ row\n
comment9.params=row
comment9.target=void\ clearRow(int)
comment9.text=\n\ Clears\ all\ the\ blocks\ in\ the\ row\ and\ shifts\ the\ blocks\ above\ that\ row\ down.\n\ @precondition\ 0\ <\=\ row\ <\ number\ of\ rows\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ given\ row\ is\ full\ of\ blocks\n\ @postcondition\ Every\ block\ in\ the\ given\ row\ has\ been\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ removed,\ and\ every\ block\ above\ row\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ has\ been\ moved\ down\ one\ row.\n\ @param\ row\ int\ the\ row\ you\ want\ to\ clear\n
numComments=12
